@model CarDealership.UI.Models.UserAddViewModel
@{
    ViewBag.Title = "Add User";
}

<h2>Add User</h2>

@using (Html.BeginForm())
{
    <div class="row">
        <div class="form-group col-xs-12 col-md-6">
            @Html.LabelFor(m => m.FirstName, "First Name", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(m => m.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-xs-12 col-md-6">
            @Html.LabelFor(m => m.LastName, "Last Name", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(m => m.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-xs-12 col-md-6">
            @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-xs-12 col-md-6">
            @Html.LabelFor(m => m.Role, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(m => m.Role, Model.Roles, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Role, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-xs-12 col-md-6">
            @Html.LabelFor(m => m.Password, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-xs-12 col-md-6">
            @Html.LabelFor(m => m.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(m => m.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-custom" />
        @Html.ActionLink("Cancel", "Users", routeValues: null, htmlAttributes: new { @class = "btn btn-default" })
    </div>
}